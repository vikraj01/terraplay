name: Start Game Server

on:
  workflow_dispatch:
    inputs:
      game: 
        description: "What is the context of the infra? (e.g. global or minetest or warzone2100)"
        required: true
        default: 'global'
        type: string
      user_id:
        description: "What is the user_id of the infra?"
        required: true
        type: string
      run_id:
        description: "To track the action workflow dispatch"
        required: true
        type: string
      server_ip:
        description: "IP address of the started game server"
        required: false
        type: string

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      server_ip: ${{ steps.get-terraform-output.outputs.server_ip }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./infra

      - name: Apply Terraform and Get Outputs
        id: terraform
        run: terraform apply -auto-approve -input=false
        working-directory: ./infra

      - name: Get Terraform Output (server_ip)
        id: get-terraform-output
        run: echo "server_ip=$(terraform output -raw server_ip)" >> $GITHUB_OUTPUT
        working-directory: ./infra

      - name: Access Output
        run: |
          echo "Server IP: ${{ steps.get-terraform-output.outputs.server_ip }}"
      
      - name: Output Inputs with Server IP
        run: |
          echo "Updated Inputs with Server IP: "
          echo "server_ip=${{ steps.get-terraform-output.outputs.server_ip }}"
          echo "${{ toJSON(github.event.inputs) }}"
